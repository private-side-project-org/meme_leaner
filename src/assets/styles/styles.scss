@use "sass:string";
@use "variables" as *;

$sizes: 0, $spacing-xxs, $spacing-xs, $spacing-sm, $spacing-md, $spacing-lg,
  $spacing-xl, $spacing-xxl, auto;

@mixin generateSpacing($abbrebiation, $primary, $secondary: null) {
  @for $i from 1 through 5 {
    $size: nth($sizes, $i);
    @if $sizes#{$i} == auto {
      $primary: $sizes#{$i};
    }
    #{abbrebiation}-#{$i} {
      @if ($secondary) {
        $secondary: $sizes#{$i};
      }
      $primary: $sizes#{$i};
    }
  }
}

@include generateSpacing("m", "margin");
@include generateSpacing("mx", "margin-right", "margin-left");
@include generateSpacing("my", "margin-top", "margin-bottom");
@include generateSpacing("mt", "margin-top");
@include generateSpacing("mb", "margin-bottom");
@include generateSpacing("ml", "margin-left");
@include generateSpacing("mr", "margin-right");

.base-font {
  font-size: 16px;
  line-height: 21px;
  color: white;
}

.button {
  border: 1px solid transparent;
  color: black;
  text-decoration: none;
  padding: 12px;
  border-radius: 4px;
  background-color: #cc6868;
  &:hover {
    color: white;
  }
}

body {
  margin: 0;
}

ul {
  padding: 0;
}

a {
  @extend .base-font;
  color: white;
  cursor: pointer;
  text-decoration: none;
}

.centering {
  width: 100%;
  height: 100%;
  @include flexbox(column, center, center);
}

.pointer {
  cursor: pointer;
}

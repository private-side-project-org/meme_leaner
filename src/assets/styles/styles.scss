@use "sass:string";
@use "variables" as *;

$sizes: 0, $spacing-xxs, $spacing-xs, $spacing-sm, $spacing-md, $spacing-lg,
  $spacing-xl, $spacing-xxl, auto;

@mixin generateSpacing($abbrebiation, $primary, $secondary: null) {
  @for $i from 0 to length($sizes) {
    // extract value from array(in Sass, array index starts from 1)
    // [1,2,3,...] whereas [0,1,2,...] other languages.
    $size: nth($sizes, $i + 1);
    @if string.slice($abbrebiation, 1, 1) == "m" and $size == auto {
      // auto class m-auto, p-auto etc...
      .#{$abbrebiation}-auto {
        @if ($secondary) {
          #{$secondary}: #{$size};
        }
        #{$primary}: #{$size};
      }
    } @else {
      // classes other than auto
      // m-0(margin: 0px), m-1(margin: 4px), m-2(margin: 8px)...
      .#{$abbrebiation}-#{$i} {
        @if ($secondary) {
          #{$secondary}: #{$size};
        }
        #{$primary}: #{$size};
      }
    }
  }
}

@include generateSpacing("m", "margin");
@include generateSpacing("mx", "margin-right", "margin-left");
@include generateSpacing("my", "margin-top", "margin-bottom");
@include generateSpacing("mt", "margin-top");
@include generateSpacing("mb", "margin-bottom");
@include generateSpacing("ml", "margin-left");
@include generateSpacing("mr", "margin-right");

@include generateSpacing("p", "padding");
@include generateSpacing("px", "padding-right", "padding-left");
@include generateSpacing("py", "padding-top", "padding-bottom");
@include generateSpacing("pt", "padding-top");
@include generateSpacing("pb", "padding-bottom");
@include generateSpacing("pl", "padding-left");
@include generateSpacing("pr", "padding-right");

.base-font {
  font-size: 16px;
  line-height: 28px;
  color: white;
}

.button {
  @include flexbox(null, center, center);
  @extend .base-font;
  min-width: 8rem;
  border: 1px solid transparent;
  color: black;
  text-decoration: none;
  padding: 12px;
  border-radius: 4px;
  background-color: #cc6868;
  box-sizing: border-box;
  &:hover {
    color: white;
  }
}

// global class(be careful override...)
body {
  margin: 0;
}

ul {
  padding: 0;
}

a {
  @extend .base-font;
  display: inline-block;
  color: white;
  cursor: pointer;
  text-decoration: none;
  &:hover {
    color: skyblue;
    border-bottom: 1px solid skyblue;
  }
}

.centering {
  width: 100%;
  height: 100%;
  @include flexbox(column, center, center);
}

.pointer {
  cursor: pointer;
}

.page-title {
  -webkit-text-stroke-width: 1px;
  -webkit-text-stroke-color: white;
  color: black;
  font-size: 32px;
}

.title-font {
  font-size: 21px;
}

.column {
  @include flexbox(column);
}

.error-font {
  color: red;
}
